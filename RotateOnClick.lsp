;;; ROTATEONCLICK - Обертає обраний об'єкт на 180 градусів навколо його точки вставки
;;; при кожному кліку мишею.

(defun c:ROTATEONCLICK ( / ent sel_obj ins_pt)
  (princ "\nСкрипт ROTATEONCLICK завантажено. Введіть ROTATEONCLICK для запуску.")
  (princ) ; Тихий вихід з defun

  ;; Основна функція команди
  (defun c:ROTATEONCLICK ( / ent sel_obj ins_pt)
    (setvar "CMDECHO" 0) ; Вимкнути відображення команд у командному рядку

    (while
      (setq sel_obj (entsel "\nОберіть об'єкт для розвороту на 180° (або натисніть Enter/Esc для завершення): "))

      (if sel_obj
        (progn
          (setq ent (car sel_obj)) ; Отримати ім'я об'єкта (entity name)
          (setq ent_data (entget ent)) ; Отримати дані об'єкта

          ;; Спроба отримати точку вставки.
          ;; DXF код 10 зазвичай є точкою вставки для блоків, тексту, тощо.
          ;; Для інших об'єктів (лінії, кола) це може бути початкова точка або центр.
          ;; Для більш універсального рішення може знадобитися перевірка типу об'єкта.
          (if (assoc 10 ent_data)
            (setq ins_pt (cdr (assoc 10 ent_data)))
            (progn
              ;; Якщо код 10 не знайдено (наприклад, для деяких примітивів),
              ;; спробуємо використати точку, по якій клікнув користувач, як базову.
              ;; Або можна спробувати розрахувати центр об'єкта (складніше).
              ;; Для простоти зараз, якщо точка вставки не очевидна,
              ;; можна або пропустити, або запитати базову точку.
              ;; В даному випадку, спробуємо отримати геометричний центр (спрощено).
              ;; Для більшості випадків краще покладатися на DXF 10 або bounding box.
              ;; Тут ми використаємо точку кліку як запасний варіант, якщо DXF 10 немає.
              ;; Або, що краще, спробуємо обчислити центр через bounding box.
              ;; Для простоти цього скрипта, якщо DXF 10 немає, можемо вивести попередження
              ;; або використати альтернативу. Для блоків та тексту DXF 10 має бути.

              ;; Якщо об'єкт - лінія, дуга, коло тощо, знайдемо середину.
              ;; Це спрощення, ідеально було б обробляти кожен тип об'єкта.
              (if (and (assoc 10 ent_data) (assoc 11 ent_data) (not (assoc 40 ent_data))) ; Лінія
                  (setq ins_pt (mapcar (function (lambda (a b) (/ (+ a b) 2.0))) (cdr (assoc 10 ent_data)) (cdr (assoc 11 ent_data))))
                  (if (assoc 10 ent_data) ; Коло, Дуга (центр)
                      (setq ins_pt (cdr (assoc 10 ent_data)))
                      (progn ; Якщо точку вставки визначити складно, використаємо точку кліку
                        (setq ins_pt (cadr sel_obj))
                        (princ "\nНеможливо точно визначити точку вставки, використано точку кліку.")
                      )
                  )
              )
            )
          )

          (if ins_pt
            (progn
              (command "_.ROTATE" ent "" "_non" ins_pt "180")
              (princ (strcat "\nОб'єкт " (cdr (assoc -1 ent_data)) " розвернуто на 180° навколо точки " (rtos (car ins_pt)) "," (rtos (cadr ins_pt)) "."))
            )
            (princ "\nНе вдалося визначити точку вставки для обраного об'єкта.")
          )
        )
        (progn
          (princ "\nЗавершення роботи скрипту ROTATEONCLICK.")
          nil ; Сигнал для завершення циклу while
        )
      )
    )
    (setvar "CMDECHO" 1) ; Увімкнути відображення команд
    (princ) ; Тихий вихід
  )
)
(princ) ; Тихий вихід з файлу